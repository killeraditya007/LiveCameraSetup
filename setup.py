#!/usr/bin/env python3
"""
Setup script for Live Stream Setup with Hostinger
This script helps configure the system for your Hostinger server
"""

import os
import sys

def main():
    print("üè† Live Room Camera Stream Setup")
    print("=" * 50)
    
    # Get Hostinger domain
    print("\nüì° Hostinger Server Configuration")
    print("Enter your Hostinger domain (e.g., https://yourdomain.hostinger.com)")
    domain = input("Domain: ").strip()
    
    if not domain:
        print("‚ùå Domain is required!")
        return
    
    if not domain.startswith('http'):
        domain = 'https://' + domain
    
    # Get stream ID
    print("\nüé• Stream Configuration")
    stream_id = input("Stream ID (default: laptop_camera_001): ").strip()
    if not stream_id:
        stream_id = "laptop_camera_001"
    
    # Camera settings
    print("\nüìπ Camera Settings")
    device_id = input("Camera device ID (default: 0): ").strip()
    if not device_id:
        device_id = "0"
    else:
        try:
            int(device_id)
        except ValueError:
            print("‚ùå Device ID must be a number!")
            return
    
    width = input("Video width (default: 640): ").strip()
    if not width:
        width = "640"
    else:
        try:
            int(width)
        except ValueError:
            print("‚ùå Width must be a number!")
            return
    
    height = input("Video height (default: 480): ").strip()
    if not height:
        height = "480"
    else:
        try:
            int(height)
        except ValueError:
            print("‚ùå Height must be a number!")
            return
    
    quality = input("JPEG quality 1-100 (default: 85): ").strip()
    if not quality:
        quality = "85"
    else:
        try:
            q = int(quality)
            if q < 1 or q > 100:
                print("‚ùå Quality must be between 1 and 100!")
                return
        except ValueError:
            print("‚ùå Quality must be a number!")
            return
    
    # Generate config.py
    config_content = f'''# Configuration file for Live Stream Setup
# Generated by setup.py

# Hostinger Server Configuration
HOSTINGER_CONFIG = {{
    'domain': '{domain}',
    'api_endpoint': '/stream_server.php/api/stream',
    'status_endpoint': '/stream_server.php/api/status',
    'frame_endpoint': '/stream_server.php/api/get_frame',
    'web_app_url': '/stream.html',
    'stream_id': '{stream_id}'
}}

# Camera Configuration
CAMERA_CONFIG = {{
    'device_id': {device_id},
    'width': {width},
    'height': {height},
    'fps': 30,
    'quality': {quality}
}}

# Network Configuration
NETWORK_CONFIG = {{
    'local_port': 5000,
    'timeout': 5,
    'max_retries': 3
}}
'''
    
    # Write config file
    try:
        with open('config.py', 'w') as f:
            f.write(config_content)
        print("\n‚úÖ Configuration saved to config.py")
    except Exception as e:
        print(f"‚ùå Error saving config: {e}")
        return
    
    # Display next steps
    print("\nüìã Next Steps:")
    print("1. Upload server files to your Hostinger server:")
    print("   - Upload server/stream_server.php to public_html/")
    print("   - Upload server/stream.html to public_html/")
    print()
    print("2. Test your server setup:")
    print(f"   - Visit {domain}/stream_server.php")
    print(f"   - Visit {domain}/stream.html")
    print()
    print("3. Install Python dependencies:")
    print("   pip install -r requirements.txt")
    print()
    print("4. Start the camera client:")
    print("   python backend/app.py")
    print()
    print("5. Access your live stream from anywhere:")
    print(f"   {domain}/stream.html")
    print()
    print("üéâ Setup complete! Your live stream will be accessible from anywhere!")

if __name__ == "__main__":
    main()
